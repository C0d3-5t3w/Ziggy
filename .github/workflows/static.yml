# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      
      - name: Process PHP files
        run: |
          echo "Processing PHP files to HTML..."
          mkdir -p build
          
          # Function to process PHP files
          process_php_file() {
            local input_file=$1
            local output_file=$2
            if [ -f "$input_file" ]; then
              echo "Processing $input_file to $output_file"
              # Use PHP to render the file
              php -f "$input_file" > "$output_file"
              if [ $? -eq 0 ]; then
                echo "✅ Successfully processed $input_file"
              else
                echo "❌ Failed to process $input_file"
                exit 1
              fi
            else
              echo "❌ Source file $input_file not found"
              exit 1
            fi
          }
          
          # Process root files
          process_php_file "index.php" "index.html"
          
          # Process 404 page
          process_php_file "404.php" "404.html"
          
          # Create directories as needed
          mkdir -p build/pkg/pages
          
          # Process other pages
          for file in pkg/pages/*.php; do
            if [ -f "$file" ]; then
              filename=$(basename "$file" .php)
              process_php_file "$file" "build/$filename.html"
            fi
          done
          
          # Copy static assets
          cp -r pkg/assets build/
          
          # Move HTML files to root for direct access
          find build -name "*.html" -exec mv {} . \;
          
          echo "✅ All PHP files processed successfully"
      
      - name: Create 404 page if not exists
        run: |
          if [ ! -f "404.html" ]; then
            echo "Creating 404.html file..."
            cat > 404.html << 'EOL'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>404 - Page Not Found</title>
              <style>
                  body {
                      font-family: Arial, sans-serif;
                      text-align: center;
                      padding: 50px;
                      background-color: #f5f5f5;
                  }
                  .container {
                      max-width: 600px;
                      margin: 0 auto;
                      background-color: white;
                      padding: 30px;
                      border-radius: 10px;
                      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                  }
                  h1 {
                      color: #ff5722;
                  }
                  .back-link {
                      margin-top: 20px;
                      display: inline-block;
                      padding: 10px 20px;
                      background-color: #4caf50;
                      color: white;
                      text-decoration: none;
                      border-radius: 5px;
                  }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>404 - Page Not Found</h1>
                  <p>The page you are looking for might have been removed, had its name changed, or is temporarily unavailable.</p>
                  <a href="/" class="back-link">Go to Homepage</a>
              </div>
          </body>
          </html>
          EOL
            echo "✅ 404.html created successfully"
          else
            echo "✅ 404.html already exists"
          fi
          
      - name: Verify file structure
        run: |
          echo "Final file structure:"
          find . -type f -not -path "./node_modules/*" -not -path "./.git/*" | sort
          
          echo "\nVerifying key files exist:"
          for file in "index.html" "404.html" "pkg/assets/js/main.js" "pkg/assets/css/main.css" "pkg/assets/js/ZigWalk.js"; do
            if [ -f "$file" ]; then
              echo "✅ $file exists with size $(stat -c %s "$file") bytes"
              if [[ $file == *.js ]]; then
                LINES=$(wc -l < "$file")
                echo "   - File has $LINES lines of code"
                if [ $LINES -lt 5 ]; then
                  echo "   ⚠️ WARNING: File seems too small, might be empty or corrupt"
                fi
              fi
            else
              echo "❌ $file missing - CRITICAL ERROR"
              exit 1
            fi
          done

      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4