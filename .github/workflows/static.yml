name: Deploy static content to Pages

on:
  push:
    branches: ["main"]

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: |
          npm install -g typescript sass

      - name: Clean cache directory
        run: |
          rm -rf .cache
          mkdir -p .cache
          echo "Cleared cache directory"
          
      - name: Create directory structure
        run: |
          mkdir -p build/pkg/assets/js
          mkdir -p build/pkg/assets/css
          mkdir -p build/pkg/pages
          
      - name: Compile TypeScript to JavaScript
        run: |
          echo "Compiling TypeScript files to JavaScript..."
          mkdir -p pkg/assets/js
          
          for file in pkg/assets/ts/*.ts; do
            if [ -f "$file" ]; then
              filename=$(basename "$file" .ts)
              echo "Compiling $file to pkg/assets/js/$filename.js"
              tsc --target ES2015 --lib DOM,ES2015 --outDir pkg/assets/js "$file"
              
              if [ $? -eq 0 ]; then
                echo "✅ Successfully compiled $file"
              else
                echo "❌ Failed to compile $file"
              fi
            fi
          done
          
      - name: Compile SCSS to CSS
        run: |
          echo "Compiling SCSS files to CSS..."
          mkdir -p pkg/assets/css
          
          for file in pkg/assets/sass/*.scss; do
            if [ -f "$file" ]; then
              filename=$(basename "$file" .scss)
              echo "Compiling $file to pkg/assets/css/$filename.css"
              sass --no-source-map "$file" "pkg/assets/css/$filename.css"
              
              if [ $? -eq 0 ]; then
                echo "✅ Successfully compiled $file"
              else
                echo "❌ Failed to compile $file"
              fi
            fi
          done
          
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      
      - name: Process PHP files
        run: |
          echo "Processing PHP files to HTML..."
          
          process_php_file() {
            local input_file=$1
            local output_file=$2
            if [ -f "$input_file" ]; then
              echo "Processing $input_file to $output_file"
              php -f "$input_file" > "$output_file"
              if [ $? -eq 0 ]; then
                echo "✅ Successfully processed $input_file"
              else
                echo "❌ Failed to process $input_file"
                exit 1
              fi
            else
              echo "❌ Source file $input_file not found"
              exit 1
            fi
          }
          
          process_php_file "index.php" "build/index.html"
          
          if [ -f "404.php" ]; then
            process_php_file "404.php" "build/404.html"
          fi
          
          for file in pkg/pages/*.php; do
            if [ -f "$file" ]; then
              filename=$(basename "$file" .php)
              process_php_file "$file" "build/$filename.html"
            fi
          done
          
          echo "✅ All PHP files processed successfully"
      
      - name: Create 404 page if not exists
        run: |
          if [ ! -f "build/404.html" ]; then
            echo "Creating 404.html file..."
            cat > "build/404.html" << 'EOL'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>404 - Page Not Found</title>
              <style>
                  body {
                      font-family: Arial, sans-serif;
                      text-align: center;
                      padding: 50px;
                      background-color: #f5f5f5;
                  }
                  .container {
                      max-width: 600px;
                      margin: 0 auto;
                      background-color: white;
                      padding: 30px;
                      border-radius: 10px;
                      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                  }
                  h1 {
                      color: #ff5722;
                  }
                  .back-link {
                      margin-top: 20px;
                      display: inline-block;
                      padding: 10px 20px;
                      background-color: #4caf50;
                      color: white;
                      text-decoration: none;
                      border-radius: 5px;
                  }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>404 - Page Not Found</h1>
                  <p>The page you are looking for might have been removed, had its name changed, or is temporarily unavailable.</p>
                  <a href="/" class="back-link">Go to Homepage</a>
              </div>
          </body>
          </html>
          EOL
            echo "✅ 404.html created successfully"
          else
            echo "✅ 404.html already exists"
          fi
      
      - name: Copy static assets
        run: |
          echo "Copying static assets to build directory..."
          
          if [ -d "pkg/assets/js" ]; then
            mkdir -p build/pkg/assets/js
            cp -r pkg/assets/js/* build/pkg/assets/js/
          fi
          
          if [ -d "pkg/assets/css" ]; then
            mkdir -p build/pkg/assets/css
            cp -r pkg/assets/css/* build/pkg/assets/css/
          fi
          
          if [ -d "pkg/assets/images" ]; then
            mkdir -p build/pkg/assets/images
            cp -r pkg/assets/images/* build/pkg/assets/images/
          fi
          
          if [ -d "pkg/assets/fonts" ]; then
            mkdir -p build/pkg/assets/fonts
            cp -r pkg/assets/fonts/* build/pkg/assets/fonts/
          fi
          
          for htmlfile in *.html; do
            if [ -f "$htmlfile" ] && [ "$htmlfile" != "build/index.html" ] && [ "$htmlfile" != "build/404.html" ]; then
              cp "$htmlfile" "build/"
            fi
          done
          
          echo "✅ Static assets copied successfully"
          
      - name: Fix paths in HTML files
        run: |
          echo "Fixing paths in HTML files..."
          
          cat > fix-paths.php << 'EOL'
          <?php
          function fixPaths($content) {
            // No need to change paths that already use pkg/assets format
            return $content;
          }
          
          $files = glob('build/*.html');
          foreach ($files as $file) {
            $content = file_get_contents($file);
            $fixed = fixPaths($content);
            file_put_contents($file, $fixed);
            echo "Fixed paths in $file\n";
          }
          EOL
          
          php fix-paths.php
          
          echo "✅ Paths fixed in HTML files"
          
      - name: Move HTML files to root of build
        run: |
          echo "Moving HTML files to root of build directory..."
          
          for file in build/pkg/pages/*.html; do
            if [ -f "$file" ]; then
              filename=$(basename "$file")
              cp "$file" "build/$filename"
              echo "Copied $file to build/$filename"
            fi
          done
          
          echo "✅ HTML files moved successfully"
      
      - name: Verify file structure
        run: |
          echo "Final file structure:"
          find build -type f | sort
          
          echo -e "\nVerifying key files exist:"
          for file in "build/index.html" "build/404.html" "pkg/assets/js/main.js" "pkg/assets/css/main.css"; do
            if [ -f "$file" ]; then
              echo "✅ $file exists with size $(stat -c %s "$file") bytes"
              if [[ $file == *.js ]]; then
                LINES=$(wc -l < "$file")
                echo "   - File has $LINES lines of code"
                if [ $LINES -lt 5 ]; then
                  echo "   ⚠️ WARNING: File seems too small, might be empty or corrupt"
                fi
              fi
            else
              echo "⚠️ $file not found - this might cause issues"
            fi
          done

      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'build'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4